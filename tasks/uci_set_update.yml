---
- name: 'Set fact: UCI prefix'
  ansible.builtin.set_fact:
    _uci_prefix_key: ''
  when: >
    _uci_prefix_key is not defined
    or _uci_prefix_key == None

- name: 'Ensure UCI key is present: {{ _uci_item.key }}'
  ansible.builtin.shell:
    cmd: |
      uci show {{ _uci_prefix_key ~ _uci_item.key }}
  changed_when: false
  register: '__tmp_key_exists'
  ignore_errors: true
  become: true

- name: 'Set fact: UCI value (convert true/false to on/off)'
  ansible.builtin.set_fact:
    __tmp_uci_value: "{{ 'off' if _uci_item.value == false else 'on' }}"
  register: '__tmp_is_bool'
  when: _uci_item.value | bool | string == _uci_item.value | string

- name: 'Set fact: Check if value is a list'
  ansible.builtin.set_fact:
    __tmp_uci_value: '{{ _uci_item.value }}'
  register: '__tmp_is_list'
  when: >
    _uci_item.value is not string
    and _uci_item.value is not mapping
    and _uci_item.value is iterable
    and _uci_item.value | list | string == _uci_item.value | string

- name: 'Set fact: UCI value (no convertion)'
  ansible.builtin.set_fact:
    __tmp_uci_value: '{{ _uci_item.value }}'
  when: >
    __tmp_is_bool.skipped is defined
    and __tmp_is_list.skipped is defined
    and __tmp_is_list.skipped

- name: 'Get value of UCI key (if present): {{ _uci_item.key }}'
  ansible.builtin.shell:
    cmd: |
      set -o pipefail;
      uci show {{ _uci_prefix_key ~ _uci_item.key }} | head -n1 | awk -F '=' '{ print $2 }' | tr -d "'"
  changed_when: false
  register: __tmp_item_value
  become: true
  when: __tmp_key_exists.rc == 0

- name: 'Create/update UCI key: {{ _uci_item.key }} -> {{ __tmp_uci_value }}'  # noqa: name no-changed-when
  ansible.builtin.shell:
    cmd: |
      uci set {{ _uci_prefix_key ~ _uci_item.key }}={{ __tmp_uci_value }}
  when: >
    (__tmp_key_exists.rc != 0
    or __tmp_item_value.stdout | trim != __tmp_uci_value | trim)
    and __tmp_is_list.skipped is defined
    and __tmp_is_list.skipped
  notify: 'Commit uci changes'
  become: true

- name: 'Include tasks to create/update list item {{ _uci_item.key }} UCI key with value {{ __tmp_uci_value }} (prefix: {{ _uci_prefix_key }})'  # noqa: name
  ansible.builtin.include_tasks:
    file: 'uci_create_list_item.yml'
  when: >
    __tmp_is_list is defined
    and __tmp_is_list.skipped is not defined
    and
    (__tmp_key_exists.rc != 0
    or
    __tmp_key_exists.stdout | split('=') | last | trim | replace("'", "") | split != __tmp_uci_value | list)
